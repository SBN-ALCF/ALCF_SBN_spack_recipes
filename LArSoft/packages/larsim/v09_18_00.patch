diff --git a/CMakeLists.txt b/CMakeLists.txt
index f96aa41..8b02873 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -10,10 +10,11 @@ cmake_minimum_required(VERSION 3.19 FATAL_ERROR)
 
 project(larsim VERSION 09.18.00 LANGUAGES CXX)
 
-# cetbuildtools contains our cmake modules
-find_package(cetbuildtools REQUIRED)
+set(larsim_FW_DIR fw)
 
-list(APPEND CMAKE_MODULE_PATH $ENV{CANVAS_ROOT_IO_DIR}/Modules $ENV{ART_DIR}/Modules)
+find_package( cetmodules REQUIRED )
+find_package( canvas_root_io )
+find_package( art )
 
 include(CetCMakeEnv)
 cet_cmake_env()
@@ -28,95 +29,94 @@ cet_set_compiler_flags(DIAGS CAUTIOUS
 cet_report_compiler_flags()
 
 # these are minimum required versions, not the actual product versions
-find_ups_product(libxml2)
-find_ups_product( larcoreobj )
-find_ups_product( larcorealg )
-find_ups_product( larcore )
-find_ups_product( lardataobj )
-find_ups_product( lardataalg )
-find_ups_product( lardata )
-find_ups_product( larevt )
-find_ups_product( marley )
-find_ups_product( nutools )
-find_ups_product(nug4)
-find_ups_product( nugen )
-find_ups_product( nurandom )
-find_ups_product( nusimdata )
-find_ups_product( art )
-find_ups_product(art_root_io)
-find_ups_product(messagefacility)
-find_ups_geant4( )
-find_ups_root( )
-find_ups_product( postgresql )
-find_ups_product( ifdhc )
-find_ups_product( genie )
-find_ups_product( log4cpp )
-find_ups_product( range )
-find_ups_product(cetlib)
-find_ups_product(clhep)
+find_package( libxml2 )
+find_package( larcoreobj )
+find_package( larcorealg )
+find_package( larcore )
+find_package( lardataobj )
+find_package( lardataalg )
+find_package( lardata )
+find_package( larevt )
+find_package( marley )
+find_package( nutools )
+find_package( nug4 )
+find_package( nugen )
+find_package( nurandom )
+find_package( nusimdata )
+find_package( Geant4 )
+find_package( art_root_io )
+find_package( messagefacility )
+find_package( ROOT )
+find_package( PostgreSQL )
+find_package( ifdhc )
+find_package( GENIE )
+find_package( log4cpp )
+find_package( Range-v3 )
+find_package( cetlib)
+find_package( CLHEP )
 
 # Wes put this here to use TRACE for debugging...
-#find_ups_product( TRACE )
-
+#find_package( TRACE )
+find_package( Boost COMPONENTS serialization date_time)
 #  Find all the libraries needed by our dependent CMakeList.txt files
-cet_find_library( BOOST_SERIALIZATION NAMES boost_serialization PATHS ENV BOOST_LIB NO_DEFAULT_PATH )
-cet_find_library( BOOST_DATE_TIME     NAMES boost_date_time     PATHS ENV BOOST_LIB NO_DEFAULT_PATH )
+find_library( BOOST_SERIALIZATION NAMES boost_serialization PATHS ${BOOST_SERIALIZAION_LIBRARY}  )
+find_library( BOOST_DATE_TIME     NAMES boost_date_time     PATHS ${BOOST_DATA_TIME_LIBRARY}  )
 #
-find_library( CRY NAMES CRY PATHS  ENV CRYHOME PATH_SUFFIXES lib NO_DEFAULT_PATH )
+find_library( CRY NAMES CRY PATHS  $ENV{CRYHOME})
 
 # genie (copied from nugen)
-  cet_find_library( LOG4CPP NAMES log4cpp PATHS ENV LOG4CPP_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWMSG       NAMES GFwMsg       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWREG       NAMES GFwReg       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWALG       NAMES GFwAlg       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWINT       NAMES GFwInt       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWGHEP      NAMES GFwGHEP      PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWNUM       NAMES GFwNum       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWUTL       NAMES GFwUtl       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWPARDAT    NAMES GFwParDat    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWEG        NAMES GFwEG        PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GFWNTP       NAMES GFwNtp       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHXSIG      NAMES GPhXSIg      PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHPDF       NAMES GPhPDF       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHNUCLST    NAMES GPhNuclSt    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHCMN       NAMES GPhCmn       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHDCY       NAMES GPhDcy       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHHADTRANSP NAMES GPhHadTransp PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHHADNZ     NAMES GPhHadnz     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHDEEX      NAMES GPhDeEx      PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHAMNGXS    NAMES GPhAMNGXS    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHAMNGEG    NAMES GPhAMNGEG    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHCHMXS     NAMES GPhChmXS     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHCOHXS     NAMES GPhCohXS     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHCOHEG     NAMES GPhCohEG     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHDISXS     NAMES GPhDISXS     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHDISEG     NAMES GPhDISEG     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHDFRCXS    NAMES GPhDfrcXS    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHDFRCEG    NAMES GPhDfrcEG    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHGLWRESXS  NAMES GPhGlwResXS  PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHGLWRESEG  NAMES GPhGlwResEG  PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHIBDXS     NAMES GPhIBDXS     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHIBDEG     NAMES GPhIBDEG     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHMNUCXS    NAMES GPhMNucXS    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHMNUCEG    NAMES GPhMNucEG    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHMEL       NAMES GPhMEL       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHNUELXS    NAMES GPhNuElXS    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHNUELEG    NAMES GPhNuElEG    PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHQELXS     NAMES GPhQELXS     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHQELEG     NAMES GPhQELEG     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHRESXS     NAMES GPhResXS     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHRESEG     NAMES GPhResEG     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHSTRXS     NAMES GPhStrXS     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHSTREG     NAMES GPhStrEG     PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GPHNDCY      NAMES GPhNDcy      PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GTLGEO       NAMES GTlGeo       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GTLFLX       NAMES GTlFlx       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GRWFWK       NAMES GRwFwk       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GRWIO        NAMES GRwIO        PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
-  cet_find_library( GRWCLC       NAMES GRwClc       PATHS ENV GENIE_LIB NO_DEFAULT_PATH )
+  find_library( LOG4CPP NAMES log4cpp )
+  find_library( GFWMSG       NAMES GFwMsg        )
+  find_library( GFWREG       NAMES GFwReg        )
+  find_library( GFWALG       NAMES GFwAlg        )
+  find_library( GFWINT       NAMES GFwInt        )
+  find_library( GFWGHEP      NAMES GFwGHEP       )
+  find_library( GFWNUM       NAMES GFwNum        )
+  find_library( GFWUTL       NAMES GFwUtl        )
+  find_library( GFWPARDAT    NAMES GFwParDat     )
+  find_library( GFWEG        NAMES GFwEG         )
+  find_library( GFWNTP       NAMES GFwNtp        )
+  find_library( GPHXSIG      NAMES GPhXSIg       )
+  find_library( GPHPDF       NAMES GPhPDF        )
+  find_library( GPHNUCLST    NAMES GPhNuclSt     )
+  find_library( GPHCMN       NAMES GPhCmn        )
+  find_library( GPHDCY       NAMES GPhDcy        )
+  find_library( GPHHADTRANSP NAMES GPhHadTransp  )
+  find_library( GPHHADNZ     NAMES GPhHadnz      )
+  find_library( GPHDEEX      NAMES GPhDeEx       )
+  find_library( GPHAMNGXS    NAMES GPhAMNGXS     )
+  find_library( GPHAMNGEG    NAMES GPhAMNGEG     )
+  find_library( GPHCHMXS     NAMES GPhChmXS      )
+  find_library( GPHCOHXS     NAMES GPhCohXS      )
+  find_library( GPHCOHEG     NAMES GPhCohEG      )
+  find_library( GPHDISXS     NAMES GPhDISXS      )
+  find_library( GPHDISEG     NAMES GPhDISEG      )
+  find_library( GPHDFRCXS    NAMES GPhDfrcXS     )
+  find_library( GPHDFRCEG    NAMES GPhDfrcEG     )
+  find_library( GPHGLWRESXS  NAMES GPhGlwResXS   )
+  find_library( GPHGLWRESEG  NAMES GPhGlwResEG   )
+  find_library( GPHIBDXS     NAMES GPhIBDXS      )
+  find_library( GPHIBDEG     NAMES GPhIBDEG      )
+  find_library( GPHMNUCXS    NAMES GPhMNucXS     )
+  find_library( GPHMNUCEG    NAMES GPhMNucEG     )
+  find_library( GPHMEL       NAMES GPhMEL        )
+  find_library( GPHNUELXS    NAMES GPhNuElXS     )
+  find_library( GPHNUELEG    NAMES GPhNuElEG     )
+  find_library( GPHQELXS     NAMES GPhQELXS      )
+  find_library( GPHQELEG     NAMES GPhQELEG      )
+  find_library( GPHRESXS     NAMES GPhResXS      )
+  find_library( GPHRESEG     NAMES GPhResEG      )
+  find_library( GPHSTRXS     NAMES GPhStrXS      )
+  find_library( GPHSTREG     NAMES GPhStrEG      )
+  find_library( GPHNDCY      NAMES GPhNDcy       )
+  find_library( GTLGEO       NAMES GTlGeo        )
+  find_library( GTLFLX       NAMES GTlFlx        )
+  find_library( GRWFWK       NAMES GRwFwk        )
+  find_library( GRWIO        NAMES GRwIO         )
+  find_library( GRWCLC       NAMES GRwClc        )
 
   # GENIE pre-R-3 used GSL via ROOT's Math libs, now makes direct call not available via that route
-  cet_find_library( GSL NAMES gsl PATHS ENV GSL_LIB NO_DEFAULT_PATH )
+  find_library( GSL NAMES gsl )
 
   set (GENIE_LIB_LIST GFWMSG
                       GFWREG
@@ -170,14 +170,19 @@ find_library( CRY NAMES CRY PATHS  ENV CRYHOME PATH_SUFFIXES lib NO_DEFAULT_PATH
 		                  LOG4CPP
                       )
 # marley libraries
-cet_find_library( MARLEY NAMES MARLEY PATHS ENV MARLEY_LIB NO_DEFAULT_PATH )
-cet_find_library( MARLEY_ROOT NAMES MARLEY_ROOT PATHS ENV MARLEY_LIB NO_DEFAULT_PATH )
+find_library( MARLEY NAMES MARLEY )
+find_library( MARLEY_ROOT NAMES MARLEY_ROOT )
+
+find_library(SQLITE NAMES sqlite3 )
+
 
 # trying to deal with a problem finding XML2
-cet_find_library(XML2 NAMES xml2 PATHS ENV LIBXML2_FQ_DIR PATH_SUFFIXES lib NO_DEFAULT_PATH)
+find_library(XML2 NAMES xml2 )
 
 # temporarily needed since this is an unexpected header path
-include_directories( $ENV{IFDHC_FQ_DIR}/inc )
+find_library( IFDH    NAMES ifdh )
+get_filename_component(IFDH_LIB    ${IFDH}    DIRECTORY)
+include_directories("${IFDH_LIB}/../inc")
 
 # macros for dictionary and simple_plugin
 include(ArtDictionary)
@@ -194,7 +199,10 @@ add_subdirectory(test)
 add_subdirectory(example)
 
 # ups - table and config files
+if(WANT_UPS)
 add_subdirectory(ups)
+endif()
 
 # packaging utility
-include(UseCPack)
+#include(UseCPack)
+cet_cmake_config()
diff --git a/larsim/DetSim/CMakeLists.txt b/larsim/DetSim/CMakeLists.txt
index 61c8df6..9c18620 100644
--- a/larsim/DetSim/CMakeLists.txt
+++ b/larsim/DetSim/CMakeLists.txt
@@ -1,5 +1,5 @@
-simple_plugin(SimWireAna "module"
-              lardataobj_RawData
+cet_build_plugin(SimWireAna art::module LIBRARIES
+              lardataobj::RawData
               art::Framework_Services_Registry
               art_root_io::tfile_support
               art_root_io::TFileService_service
@@ -7,13 +7,13 @@ simple_plugin(SimWireAna "module"
               ROOT::Core
               ROOT::Hist)
 
-simple_plugin(SimWire "module"
-              lardataalg_DetectorInfo
-              lardataobj_RawData
-              lardataobj_Simulation
-              larcorealg_Geometry
-              lardata_Utilities_LArFFT_service
-              nurandom_RandomUtils_NuRandomService_service
+cet_build_plugin(SimWire art::module LIBRARIES
+              lardataalg::DetectorInfo
+              lardataobj::RawData
+              lardataobj::Simulation
+              larcorealg::Geometry
+              lardata::Utilities_LArFFT_service
+              nurandom::RandomUtils_NuRandomService_service
               art::Framework_Services_Registry
               art_root_io::TFileService_service
               art_root_io::tfile_support
@@ -22,8 +22,8 @@ simple_plugin(SimWire "module"
               ROOT::Hist
               ROOT::MathCore)
 
-simple_plugin(WienerFilterAna "module"
-              larcorealg_Geometry
+cet_build_plugin(WienerFilterAna art::module LIBRARIES
+              larcorealg::Geometry
               art::Framework_Services_Registry
               art_root_io::tfile_support
               art_root_io::TFileService_service
diff --git a/larsim/ElectronDrift/CMakeLists.txt b/larsim/ElectronDrift/CMakeLists.txt
index 26f17d9..806e9b8 100644
--- a/larsim/ElectronDrift/CMakeLists.txt
+++ b/larsim/ElectronDrift/CMakeLists.txt
@@ -1,17 +1,18 @@
-art_make(LIB_LIBRARIES
+set(LIB_LIBRARIES
            art::Framework_Services_Registry
-           larsim_IonizationScintillation
+           larsim::IonizationScintillation
            canvas::canvas
            cetlib_except::cetlib_except
 	   messagefacility::MF_MessageLogger
            fhiclcpp::fhiclcpp
-         MODULE_LIBRARIES
-           larsim_ElectronDrift
-           larsim_Simulation
-	   larsim_Utils
-           larsim_IonizationScintillation
-           larcorealg_Geometry
-           nurandom_RandomUtils_NuRandomService_service
+)
+set( MODULE_LIBRARIES
+           larsim::ElectronDrift
+           larsim::Simulation
+	   larsim::Utils
+           larsim::IonizationScintillation
+           larcorealg::Geometry
+           nurandom::RandomUtils_NuRandomService_service
            art::Framework_Services_Registry
            art_root_io::TFileService_service
            art_root_io::tfile_support
@@ -20,6 +21,19 @@ art_make(LIB_LIBRARIES
            ROOT::Tree
          )
 
+cet_make_library( SOURCE  ISCalculationSeparate.cc 
+  LIBRARIES ${LIB_LIBRARIES})
+
+cet_build_plugin(DriftElectronstoPlane art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(ShiftEdepSCE art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(SimDriftElectrons art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(SimDriftedElectronClusterAna art::module LIBRARIES ${MODULE_LIBRARIES})
+
+
+
 
 install_headers()
 install_fhicl()
diff --git a/larsim/EventGenerator/CMakeLists.txt b/larsim/EventGenerator/CMakeLists.txt
index b2cb3ee..64feead 100644
--- a/larsim/EventGenerator/CMakeLists.txt
+++ b/larsim/EventGenerator/CMakeLists.txt
@@ -1,20 +1,21 @@
-art_make(
-         EXCLUDE
-           "POTaccumulator_module.cc"
-         LIB_LIBRARIES
-           nusimdata_SimulationBase
+set(LIB_LIBRARIES
+           nusimdata::SimulationBase
+           cetlib::cetlib
+           cetlib_except::cetlib_except
+           fhiclcpp::fhiclcpp fhiclcpp::types
            CLHEP::CLHEP
            ROOT::Core
            ROOT::Hist
            ROOT::Physics
            ROOT::RIO
-         MODULE_LIBRARIES
-           larcorealg_Geometry
-           larcoreobj_SummaryData
-           larsim_EventGenerator
-           larsim_PhotonPropagation_PhotonVisibilityService_service
-           nurandom_RandomUtils_NuRandomService_service
-           nusimdata_SimulationBase
+)
+set(MODULE_LIBRARIES
+           larcorealg::Geometry
+           larcoreobj::SummaryData
+           larsim::EventGenerator
+           larsim::PhotonPropagation_PhotonVisibilityService_service
+           nurandom::RandomUtils_NuRandomService_service
+           nusimdata::SimulationBase
            art::Framework_Services_Registry
            art_root_io::TFileService_service
            art_root_io::tfile_support
@@ -25,9 +26,27 @@ art_make(
            ROOT::Hist
            ROOT::Physics
            ROOT::RIO
-        )
+           ${SQLITE}
+)
 
-simple_plugin(POTaccumulator "module"
+cet_make_library(SOURCE NueAr40CCGenerator.cxx
+  LIBRARIES ${LIB_LIBRARIES})
+
+cet_build_plugin(FileMuons art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(LightSource art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(NDKGen art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(RadioGen art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(SNNueAr40CCGen art::module LIBRARIES  ${MODULE_LIBRARIES})
+
+cet_build_plugin(SingleGen art::module LIBRARIES  ${MODULE_LIBRARIES})
+
+cet_build_plugin(TextFileGen art::module LIBRARIES ${MODULE_LIBRARIES}) 
+
+cet_build_plugin(POTaccumulator art::module LIBRARIES
   larcoreobj_SummaryData
   messagefacility::MF_MessageLogger
   )
diff --git a/larsim/EventGenerator/CORSIKA/CMakeLists.txt b/larsim/EventGenerator/CORSIKA/CMakeLists.txt
index 90a83d6..d6104c8 100644
--- a/larsim/EventGenerator/CORSIKA/CMakeLists.txt
+++ b/larsim/EventGenerator/CORSIKA/CMakeLists.txt
@@ -1,8 +1,13 @@
-art_make(MODULE_LIBRARIES
-           larcorealg_Geometry
-           larcoreobj_SummaryData
-           nurandom_RandomUtils_NuRandomService_service
-           nusimdata_SimulationBase
+find_library(SQLITE NAMES sqlite3 PATHS ENV SQLITE_LIB)
+find_library( IFDH    NAMES ifdh    PATHS ENV IFDHC_LIB)
+get_filename_component(IFDH_LIB    ${IFDH}    DIRECTORY)
+include_directories("${IFDH_LIB}/../inc")
+
+set(MODULE_LIBRARIES
+           larcorealg::Geometry
+           larcoreobj::SummaryData
+           nurandom::RandomUtils_NuRandomService_service
+           nusimdata::SimulationBase
            art::Framework_Services_Registry
            CLHEP::CLHEP
            IFDH
@@ -13,6 +18,9 @@ art_make(MODULE_LIBRARIES
            SQLITE
          )
 
+cet_build_plugin(CORSIKAGen art::module LIBRARIES ${MODULE_LIBRARIES})
+
+
 install_headers()
 install_fhicl()
 install_source()
diff --git a/larsim/EventGenerator/CRY/CMakeLists.txt b/larsim/EventGenerator/CRY/CMakeLists.txt
index 38c36b1..a5fd7b4 100644
--- a/larsim/EventGenerator/CRY/CMakeLists.txt
+++ b/larsim/EventGenerator/CRY/CMakeLists.txt
@@ -1,11 +1,11 @@
 include_directories($ENV{CRYHOME}/src)
 
-art_make(MODULE_LIBRARIES
-           larcorealg_Geometry
-           larcoreobj_SummaryData
-           nurandom_RandomUtils_NuRandomService_service
-           nusimdata_SimulationBase
-           nutools_EventGeneratorBase_CRY
+set(MODULE_LIBRARIES
+           larcorealg::Geometry
+           larcoreobj::SummaryData
+           nurandom::RandomUtils_NuRandomService_service
+           nusimdata::SimulationBase
+           nutools::EventGeneratorBase_CRY
            art::Framework_Services_Registry
            art_root_io::TFileService_service
            art_root_io::tfile_support
@@ -15,6 +15,8 @@ art_make(MODULE_LIBRARIES
            ROOT::Physics
          )
 
+cet_build_plugin(CosmicsGen art::module LIBRARIES ${MODULE_LIBRARIES})
+
 install_headers()
 install_fhicl()
 install_source()
diff --git a/larsim/EventGenerator/GENIE/CMakeLists.txt b/larsim/EventGenerator/GENIE/CMakeLists.txt
index abd5c1f..49d0351 100644
--- a/larsim/EventGenerator/GENIE/CMakeLists.txt
+++ b/larsim/EventGenerator/GENIE/CMakeLists.txt
@@ -1,14 +1,14 @@
-include_directories ( $ENV{GENIE_INC}/GENIE )
+include_directories ( ${GENIE_INC}/GENIE )
 
-art_make(MODULE_LIBRARIES
-         lardataalg_MCDumpers
-         larsim_Simulation lardataobj_Simulation
-         nusimdata_SimulationBase
-         larcoreobj_SummaryData
-         larcorealg_Geometry
-         larcore_Geometry_Geometry_service
-         nurandom_RandomUtils_NuRandomService_service
-         nugen_EventGeneratorBase_GENIE
+set(MODULE_LIBRARIES
+         lardataalg::MCDumpers
+         larsim::Simulation lardataobj::Simulation
+         nusimdata::SimulationBase
+         larcoreobj::SummaryData
+         larcorealg::Geometry
+         larcore::Geometry_Geometry_service
+         nurandom::RandomUtils_NuRandomService_service
+         nugen::EventGeneratorBase_GENIE
          art::Framework_Services_Registry
          art_root_io::tfile_support ROOT::Core
          art_root_io::TFileService_service
@@ -21,6 +21,13 @@ art_make(MODULE_LIBRARIES
          ROOT::MathCore
         )
 
+cet_build_plugin(GENIEGen art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(NeutronOsc art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(NucleonDecay art::module LIBRARIES ${MODULE_LIBRARIES})
+
+
 install_headers()
 install_fhicl()
 install_source()
diff --git a/larsim/EventGenerator/MARLEY/CMakeLists.txt b/larsim/EventGenerator/MARLEY/CMakeLists.txt
index 7f156a9..66f82be 100644
--- a/larsim/EventGenerator/MARLEY/CMakeLists.txt
+++ b/larsim/EventGenerator/MARLEY/CMakeLists.txt
@@ -1,10 +1,13 @@
+
 # for c2: the problem is in fhiclcpp/types/detail/Sequence.icc
-cet_add_compiler_flags( CXX -Wno-missing-braces )
+#cet_add_compiler_flags( CXX -Wno-missing-braces )
+
+include_directories ( ${MARLEY_INC} )
 
-art_make(LIB_LIBRARIES
-           larcorealg_Geometry
-           nurandom_RandomUtils_NuRandomService_service
-           nusimdata_SimulationBase
+set(LIB_LIBRARIES
+           larcorealg::Geometry
+           nurandom::RandomUtils_NuRandomService_service
+           nusimdata::SimulationBase
            MARLEY
            MARLEY_ROOT
            messagefacility::MF_MessageLogger
@@ -14,11 +17,12 @@ art_make(LIB_LIBRARIES
            ROOT::Geom
            ROOT::Physics
            art::Utilities
-           fhiclcpp::fhiclcpp
-         MODULE_LIBRARIES
-           larsim_EventGenerator_MARLEY
-           larcoreobj_SummaryData
-           lardataobj_Simulation
+           fhiclcpp::fhiclcpp fhiclcpp::types
+)
+set( MODULE_LIBRARIES
+           larsim::EventGenerator_MARLEY
+           larcoreobj::SummaryData
+           lardataobj::Simulation
            art::Framework_Services_Registry
            art_root_io::TFileService_service
            art_root_io::tfile_support
@@ -27,6 +31,13 @@ art_make(LIB_LIBRARIES
            ROOT::RIO
          )
 
+cet_make_library(SOURCE ActiveVolumeVertexSampler.cxx  MARLEYHelper.cxx
+  LIBRARIES ${LIB_LIBRARIES})
+
+cet_build_plugin(MARLEYGen art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(MARLEYTimeGen art::module LIBRARIES ${MODULE_LIBRARIES})
+
 install_headers()
 install_fhicl()
 install_source()
diff --git a/larsim/EventGenerator/MuonPropagation/CMakeLists.txt b/larsim/EventGenerator/MuonPropagation/CMakeLists.txt
index 1f8e413..eca3bd0 100644
--- a/larsim/EventGenerator/MuonPropagation/CMakeLists.txt
+++ b/larsim/EventGenerator/MuonPropagation/CMakeLists.txt
@@ -1,10 +1,10 @@
 include_directories($ENV{MuonPropagationHOME}/src)
 
-art_make(MODULE_LIBRARIES
-           larcoreobj_SummaryData
-           larcorealg_Geometry
-           nurandom_RandomUtils_NuRandomService_service
-           nusimdata_SimulationBase
+set(MODULE_LIBRARIES
+           larcoreobj::SummaryData
+           larcorealg::Geometry
+           nurandom::RandomUtils_NuRandomService_service
+           nusimdata::SimulationBase
            art::Framework_Services_Registry
            art_root_io::TFileService_service
            art_root_io::tfile_support
@@ -17,6 +17,10 @@ art_make(MODULE_LIBRARIES
            ROOT::Tree
          )
 
+cet_build_plugin(GaisserParam art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(MUSUN art::module LIBRARIES ${MODULE_LIBRARIES})
+
 install_headers()
 install_fhicl()
 install_source()
diff --git a/larsim/EventWeight/App/CMakeLists.txt b/larsim/EventWeight/App/CMakeLists.txt
index fd6534f..8158eaf 100644
--- a/larsim/EventWeight/App/CMakeLists.txt
+++ b/larsim/EventWeight/App/CMakeLists.txt
@@ -1,11 +1,10 @@
-art_make(LIBRARY_NAME     larsim_EventWeight
-         LIB_LIBRARIES    larsim_EventWeight_Base
-                          larsim_EventWeight_Calculators
-         MODULE_LIBRARIES larsim_EventWeight_Base
-                          larsim_EventWeight_Calculators
-                          nugen_EventGeneratorBase_GENIE
+set( MODULE_LIBRARIES     larsim::EventWeight_Base
+                          larsim::EventWeight_Calculators
+                          nugen::EventGeneratorBase_GENIE
                           messagefacility::MF_MessageLogger)
 
+cet_build_plugin(EventWeight art::module LIBRARIES ${MODULE_LIBRARIES})
+
 install_headers()
 install_fhicl()
 install_source()
diff --git a/larsim/EventWeight/Calculators/CMakeLists.txt b/larsim/EventWeight/Calculators/CMakeLists.txt
index cff0909..703c517 100644
--- a/larsim/EventWeight/Calculators/CMakeLists.txt
+++ b/larsim/EventWeight/Calculators/CMakeLists.txt
@@ -1,7 +1,9 @@
 # Headers needed for the GenieWeightCalc class
-include_directories ( $ENV{GENIE_INC} )
-include_directories ( $ENV{GENIE_INC}/GENIE )
-include_directories ( $ENV{LOG4CPP_INC} )
+get_filename_component(LOG4CPP_LIB    ${LOG4CPP}    DIRECTORY)
+include_directories("${LOG4CPP_LIB}/../include")
+get_filename_component(GFWMSG_LIB    ${GFWMSG}    DIRECTORY)
+include_directories("${GFWMSG_LIB}/../include")
+include_directories("${GFWMSG_LIB}/../include/GENIE")
 
 # Define a macro that indicates whether a GENIE version before 3.0.0 is in use
 parse_ups_version( ${GENIE_VERSION} )
@@ -16,11 +18,11 @@ endif()
 #add_definitions(-DGENIE_UB_PATCH)
 
 art_make(LIB_LIBRARIES
-         larsim_EventWeight_Base
-         nurandom_RandomUtils_NuRandomService_service
-         nugen_EventGeneratorBase_GENIE
+         larsim::EventWeight_Base
+         nurandom::RandomUtils_NuRandomService_service
+         nugen::EventGeneratorBase_GENIE
+         art::Persistency_Provenance
          art::Framework_Principal
-         ART_PERSISTENCY_PROVENANCE
          art::Framework_Services_Registry
          fhiclcpp::fhiclcpp
          ${GENIE_LIB_LIST}
diff --git a/larsim/GDMLUtils/CMakeLists.txt b/larsim/GDMLUtils/CMakeLists.txt
index 4852444..96ce62f 100644
--- a/larsim/GDMLUtils/CMakeLists.txt
+++ b/larsim/GDMLUtils/CMakeLists.txt
@@ -3,7 +3,7 @@ include_directories($ENV{XERCES_C_INC})
 
 art_make_exec(NAME simplifyGDML
               LIBRARIES
-              ${G4GLOBAL}
-              ${G4PERSISTENCY}
-              ${G4GEOMETRY}
+              Geant4::G4global
+              Geant4::G4persistency
+              Geant4::G4geometry
               ${XERCESC})
diff --git a/larsim/IonizationScintillation/CMakeLists.txt b/larsim/IonizationScintillation/CMakeLists.txt
index 6824f5e..3af6030 100644
--- a/larsim/IonizationScintillation/CMakeLists.txt
+++ b/larsim/IonizationScintillation/CMakeLists.txt
@@ -1,26 +1,39 @@
-art_make(LIB_LIBRARIES
-           larsim_Simulation
-           lardataobj_Simulation
-           lardataalg_DetectorInfo
-           larevt_SpaceCharge
-           nusimdata_SimulationBase
-           larcorealg_Geometry
-           larcore_Geometry_Geometry_service
+set( LIB_LIBRARIES
+           larsim::Simulation
+           lardataobj::Simulation
+           lardataalg::DetectorInfo
+           larevt::SpaceCharge
+           nusimdata::SimulationBase
+           larcorealg::Geometry
+           larcore::Geometry_Geometry_service
            fhiclcpp::fhiclcpp
            messagefacility::MF_MessageLogger
-         MODULE_LIBRARIES
-           larsim_IonizationScintillation
-           larsim_Simulation
-           lardataobj_Simulation
-           nurandom_RandomUtils_NuRandomService_service
-           larcorealg_Geometry
-           larcore_Geometry_Geometry_service
+           CLHEP::CLHEP )
+
+set( MODULE_LIBRARIES
+           larsim::IonizationScintillation
+           larsim::Simulation
+           lardataobj::Simulation
+           nurandom::RandomUtils_NuRandomService_service
+           larcorealg::Geometry
+           larcore::Geometry_Geometry_service
            art::Framework_Services_Registry
            art_root_io::tfile_support
            art_root_io::TFileService_service
            ROOT::Core
            ROOT::Tree
-           messagefacility::MF_MessageLogger)
+           messagefacility::MF_MessageLogger )
+
+
+cet_make_library(SOURCE  ISCalcCorrelated.cxx  ISCalcNESTLAr.cxx  ISCalcSeparate.cxx  ISTPC.cxx
+  LIBRARIES ${LIB_LIBRARIES} )
+
+cet_build_plugin(ISCalcAna art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(IonAndScint art::module LIBRARIES ${MODULE_LIBRARIES})
+
+
+
 
 install_headers()
 install_fhicl()
diff --git a/larsim/LegacyLArG4/CMakeLists.txt b/larsim/LegacyLArG4/CMakeLists.txt
index 6caf254..225f8c3 100644
--- a/larsim/LegacyLArG4/CMakeLists.txt
+++ b/larsim/LegacyLArG4/CMakeLists.txt
@@ -3,52 +3,102 @@ include_directories($ENV{LIBXML2_FQ_DIR}/include/libxml2)
 include_directories($ENV{GEANT4_FQ_DIR}/include)
 include_directories($ENV{XERCES_C_INC})
 
-art_make(LIB_LIBRARIES
-           larsim_PhotonPropagation_PhotonVisibilityService_service
-	   larsim_Utils
-           lardataobj_Simulation
-           larcorealg_Geometry
-           nug4_G4Base
-           nug4_ParticleNavigation
-           nug4_AdditionalG4Physics
-           nurandom_RandomUtils_NuRandomService_service
-           ${ART_UTILITIES}
+set(LIB_LIBRARIES
+           larsim::PhotonPropagation_PhotonVisibilityService_service
+	   larsim::Utils
+           lardataobj::Simulation
+           larcorealg::Geometry
+           nug4::G4Base
+           nug4::ParticleNavigation
+           nug4::AdditionalG4Physics
+           nurandom::RandomUtils_NuRandomService_service
            art::Framework_Services_Registry
            art_root_io::tfile_support
            art_root_io::TFileService_service
            canvas::canvas
            messagefacility::MF_MessageLogger
            cetlib_except::cetlib_except
+           art::Utilities
            ROOT::Core
            ROOT::Hist
            ROOT::Physics
            ROOT::Geom
            ROOT::MathCore
-           ${G4DIGITS_HITS}
-           ${G4EVENT}
-           ${G4GEOMETRY}
-           ${G4GLOBAL}
-           ${G4GRAPHICS_REPS}
-           ${G4MATERIALS}
-           ${G4INTERCOMS}
-           ${G4PARTICLES}
-           ${G4PHYSICSLISTS}
-           ${G4PROCESSES}
-           ${G4TRACK}
-           ${G4RUN}
-         MODULE_LIBRARIES
-           larsim_LegacyLArG4
-           larsim_MCCheater_ParticleInventoryService_service
-           lardataalg_MCDumpers
-           larcorealg_Geometry
-           nusimdata_SimulationBase
+           CLHEP::CLHEP
+           CLHEP::Geometry
+           Geant4::G4digits_hits
+           Geant4::G4event
+           Geant4::G4geometry
+           Geant4::G4global
+           Geant4::G4graphics_reps
+           Geant4::G4materials
+           Geant4::G4intercoms
+           Geant4::G4particles
+           Geant4::G4physicslists
+           Geant4::G4processes
+           Geant4::G4track
+           Geant4::G4run
+)
+set( MODULE_LIBRARIES
+           larsim::LegacyLArG4
+           larsim::MCCheater_ParticleInventoryService_service
+           lardataalg::MCDumpers
+           larcorealg::Geometry
+           nusimdata::SimulationBase
            art::Framework_Services_Registry
            art_root_io::TFileService_service
            art_root_io::tfile_support
            ROOT::Hist
            ROOT::Core
            ROOT::Tree
-         )
+)
+
+set(LIB_SOURCES
+AuxDetReadout.cxx
+AuxDetReadoutGeometry.cxx
+CustomPhysicsTable.cxx
+FastOpticalPhysics.cxx
+G4BadIdeaAction.cxx
+G4ThermalElectron.cxx
+ISCalculation.cxx
+ISCalculationCorrelated.cxx
+ISCalculationNEST.cxx
+ISCalculationSeparate.cxx
+IonizationAndScintillation.cxx
+IonizationAndScintillationAction.cxx
+LArStackingAction.cxx
+LArVoxelReadout.cxx
+LArVoxelReadoutGeometry.cxx
+MaterialPropertyLoader.cxx
+MuNuclearSplittingProcess.cxx
+MuNuclearSplittingProcessXSecBias.cxx
+NestAlg.cxx
+OpBoundaryProcessSimple.cxx
+OpDetLookup.cxx
+OpDetPhotonTable.cxx
+OpDetReadoutGeometry.cxx
+OpDetSensitiveDetector.cxx
+OpFastScintillation.cxx
+OpParamAction.cxx
+OpParamSD.cxx
+OpticalPhysics.cxx
+ParticleListAction.cxx
+PhysicsList.cxx
+VisualizationAction.cxx
+AllPhysicsLists.cc
+NeutronHPphysics.cc
+)
+
+cet_make_library(SOURCE ${LIB_SOURCES}
+  LIBRARIES ${LIB_LIBRARIES})
+
+cet_build_plugin(LArG4Ana art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(LArG4 art::module LIBRARIES  ${MODULE_LIBRARIES})
+
+cet_build_plugin(LArSimChannelAna art::module LIBRARIES ${MODULE_LIBRARIES})
+
+
 
 install_headers()
 install_fhicl()
diff --git a/larsim/MCCheater/CMakeLists.txt b/larsim/MCCheater/CMakeLists.txt
index 894dced..5a98b57 100644
--- a/larsim/MCCheater/CMakeLists.txt
+++ b/larsim/MCCheater/CMakeLists.txt
@@ -3,7 +3,7 @@ cet_make_library(
   SOURCE ParticleInventory.cc ParticleInventory.tcc
   LIBRARIES
     canvas::canvas
-    nug4_ParticleNavigation
+    nug4::ParticleNavigation
     messagefacility::MF_MessageLogger
     fhiclcpp::fhiclcpp
     cetlib_except::cetlib_except
@@ -20,8 +20,9 @@ cet_make_library(
     ROOT::Core
     canvas::canvas
     larsim_MCCheater_ParticleInventory
-    larcorealg_Geometry
-    lardataobj_Simulation
+    larcorealg::Geometry
+    lardataobj::Simulation
+    nug4::ParticleNavigation
   )
 
 cet_make_library(
@@ -33,46 +34,47 @@ cet_make_library(
     fhiclcpp::fhiclcpp
     messagefacility::MF_MessageLogger
     ROOT::Core
-    larcorealg_Geometry
-    lardataobj_Simulation
-    nug4_ParticleNavigation
+    larcorealg::Geometry
+    lardataobj::Simulation
+    nug4::ParticleNavigation
   )
 
-simple_plugin(ParticleInventoryService "service"
+cet_build_plugin(ParticleInventoryService art::service LIBRARIES
   art::Framework_Principal
-  ${ART_PERSISTENCY_PROVENANCE}
-  larsim_MCCheater_ParticleInventory
-  nug4_ParticleNavigation
+  art::Persistency_Provenance
+  larsim::MCCheater_ParticleInventory
+  nug4::ParticleNavigation
   ROOT::Core
   ROOT::Physics
   messagefacility::MF_MessageLogger)
 
-simple_plugin(PhotonBackTrackerService "service"
+cet_build_plugin(PhotonBackTrackerService art::service LIBRARIES
   art::Framework_Principal
-  ${ART_PERSISTENCY_PROVENANCE}
+  art::Persistency_Provenance
   messagefacility::MF_MessageLogger
-  larsim_MCCheater_PhotonBackTracker)
+  larsim::MCCheater_PhotonBackTracker)
 
-simple_plugin(BackTrackerService "service"
+cet_build_plugin(BackTrackerService art::service LIBRARIES
   art::Framework_Principal
-  ${ART_PERSISTENCY_PROVENANCE}
+  art::Persistency_Provenance
   ROOT::Core
   messagefacility::MF_MessageLogger
-  larsim_MCCheater_BackTracker
-  larsim_MCCheater_ParticleInventory)
+  larsim::MCCheater_BackTracker
+  nug4::ParticleNavigation
+  larsim::MCCheater_ParticleInventory)
 
-simple_plugin(CheckBackTracking "module"
-  larsim_MCCheater_BackTrackerService_service
-  larsim_MCCheater_ParticleInventoryService_service
-  lardataobj_RecoBase
+cet_build_plugin(CheckBackTracking art::module LIBRARIES
+  larsim::MCCheater_BackTrackerService_service
+  larsim::MCCheater_ParticleInventoryService_service
+  lardataobj::RecoBase
   messagefacility::MF_MessageLogger
   art::Framework_Services_Registry
   ROOT::Core)
 
-simple_plugin(RecoCheckAna "module"
-  larsim_MCCheater_BackTrackerService_service
-  larsim_MCCheater_ParticleInventoryService_service
-  nusimdata_SimulationBase
+cet_build_plugin(RecoCheckAna art::module LIBRARIES
+  larsim::MCCheater_BackTrackerService_service
+  larsim::MCCheater_ParticleInventoryService_service
+  nusimdata::SimulationBase
   art::Framework_Services_Registry
   art_root_io::TFileService_service
   art_root_io::tfile_support
@@ -81,14 +83,14 @@ simple_plugin(RecoCheckAna "module"
   ROOT::Hist
   ROOT::Tree)
 
-simple_plugin(BackTrackerLoader "module"
-  larsim_MCCheater_BackTrackerService_service
-  larsim_MCCheater_ParticleInventoryService_service
+cet_build_plugin(BackTrackerLoader art::module LIBRARIES
+  larsim::MCCheater_BackTrackerService_service
+  larsim::MCCheater_ParticleInventoryService_service
   art::Framework_Services_Registry)
 
-simple_plugin(PhotonBackTrackerLoader "module"
-  larsim_MCCheater_ParticleInventoryService_service
-  larsim_MCCheater_PhotonBackTrackerService_service
+cet_build_plugin(PhotonBackTrackerLoader art::module LIBRARIES
+  larsim::MCCheater_ParticleInventoryService_service
+  larsim::MCCheater_PhotonBackTrackerService_service
   art::Framework_Services_Registry)
 
 install_headers()
diff --git a/larsim/MCDumpers/CMakeLists.txt b/larsim/MCDumpers/CMakeLists.txt
index 777077c..de80b3b 100644
--- a/larsim/MCDumpers/CMakeLists.txt
+++ b/larsim/MCDumpers/CMakeLists.txt
@@ -1,11 +1,27 @@
-art_make(MODULE_LIBRARIES
-         lardataalg_MCDumpers
-         nusimdata_SimulationBase
+set(MODULE_LIBRARIES
+         lardataalg::MCDumpers
+         nusimdata::SimulationBase
          messagefacility::MF_MessageLogger
          ROOT::GenVector
          ROOT::Core
          ROOT::Physics)
 
+cet_build_plugin(DumpGTruth art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(DumpMCParticles art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(DumpMCShowers art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(DumpMCTracks art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(DumpMCTruth art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(DumpOpDetBacktrackerRecords art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(DumpSimChannels art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(DumpSimPhotons art::module LIBRARIES  ${MODULE_LIBRARIES})
+
 install_headers()
 install_fhicl()
 install_source()
diff --git a/larsim/MCSTReco/CMakeLists.txt b/larsim/MCSTReco/CMakeLists.txt
index a60639c..0c83340 100644
--- a/larsim/MCSTReco/CMakeLists.txt
+++ b/larsim/MCSTReco/CMakeLists.txt
@@ -1,24 +1,33 @@
 add_subdirectory(job)
 
-art_make(LIB_LIBRARIES
-           larcorealg_Geometry
+set(LIB_LIBRARIES
+           larcorealg::Geometry
            art::Framework_Services_Registry
-           nusimdata_SimulationBase
-           lardataobj_MCBase
+           nusimdata::SimulationBase
+           lardataobj::MCBase
            canvas::canvas
            cetlib_except::cetlib_except
            messagefacility::MF_MessageLogger
            fhiclcpp::fhiclcpp
            ROOT::Core
            ROOT::Physics
-           ${ART_UTILITIES}
-         MODULE_LIBRARIES
-           larsim_MCSTReco
+           art::Utilities
+)
+set(MODULE_LIBRARIES
+           larsim::MCSTReco
+           messagefacility::headers
            messagefacility::MF_MessageLogger
            ROOT::Core
            ROOT::Physics
          )
 
+cet_make_library(SOURCE MCRecoEdep.cxx  MCRecoPart.cxx  MCShowerRecoAlg.cxx  MCShowerRecoPart.cxx  MCTrackCollectionAnaAlg.cxx  MCTrackRecoAlg.cxx
+  LIBRARIES ${LIB_LIBRARIES})
+
+cet_build_plugin(MCReco art::module LIBRARIES ${MODULE_LIBRARIES})
+
+
+
 install_headers()
 install_fhicl()
 install_source()
diff --git a/larsim/MergeSimSources/CMakeLists.txt b/larsim/MergeSimSources/CMakeLists.txt
index 54b269a..50cda1e 100644
--- a/larsim/MergeSimSources/CMakeLists.txt
+++ b/larsim/MergeSimSources/CMakeLists.txt
@@ -1,16 +1,22 @@
-art_make(LIB_LIBRARIES  lardataobj_Simulation
-                        nusimdata_SimulationBase
+set(LIB_LIBRARIES  lardataobj::Simulation
+                        nusimdata::SimulationBase
                         ROOT::Physics
                         ROOT::Core
-           MODULE_LIBRARIES larsim_MergeSimSources
-                        larsim_Simulation
-                        lardataobj_Simulation
-                        nusimdata_SimulationBase
+)
+set( MODULE_LIBRARIES larsim::MergeSimSources
+                        larsim::Simulation
+                        lardataobj::Simulation
+                        nusimdata::SimulationBase
                         art::Framework_Services_Registry
                         messagefacility::MF_MessageLogger
                         fhiclcpp::fhiclcpp
                 )
 
+cet_make_library(SOURCE MergeSimSources.cxx
+  LIBRARIES ${LIB_LIBRARIES} )
+
+cet_build_plugin(MergeSimSources art::module LIBRARIES ${MODULE_LIBRARIES})
+
 install_headers()
 install_fhicl()
 install_source()
diff --git a/larsim/PhotonPropagation/CMakeLists.txt b/larsim/PhotonPropagation/CMakeLists.txt
index b95baad..6434550 100644
--- a/larsim/PhotonPropagation/CMakeLists.txt
+++ b/larsim/PhotonPropagation/CMakeLists.txt
@@ -1,9 +1,11 @@
-art_make(LIB_LIBRARIES larevt_Filters
-                       lardataobj_RawData
-                       larcorealg_Geometry
-                       larcore_Geometry_Geometry_service
-                       larsim_Simulation
-                       larsim_IonizationScintillation
+
+set(LIB_LIBRARIES
+                       larevt::Filters
+                       lardataobj::RawData
+                       larcorealg::Geometry
+                       larcore::Geometry_Geometry_service
+                       larsim::Simulation
+                       larsim::IonizationScintillation
                        art::Framework_Services_Registry
                        art_root_io::tfile_support ROOT::Core
                        art_root_io::TFileService_service
@@ -17,40 +19,60 @@ art_make(LIB_LIBRARIES larevt_Filters
                        ROOT::Matrix
                        ROOT::Tree
                        ROOT::GenVector
-                       ROOT::RooFit
-          SERVICE_LIBRARIES larsim_PhotonPropagation
-                       larsim_Simulation
-                       nug4_ParticleNavigation
-                       lardataobj_Simulation
-                       larevt_Filters
-                       lardataobj_RawData
-                       larcorealg_Geometry
-                       larcore_Geometry_Geometry_service
+                       ROOT::RooFit 
+)
+set(SERVICE_LIBRARIES
+                       larsim::PhotonPropagation
+                       larsim::Simulation
+                       nug4::ParticleNavigation
+                       lardataobj::Simulation
+                       larevt::Filters
+                       lardataobj::RawData
+                       larcorealg::Geometry
+                       larcore::Geometry_Geometry_service
                        art_root_io::tfile_support ROOT::Core
                        art_root_io::TFileService_service
                        messagefacility::MF_MessageLogger
-                       ROOT::GenVector
-          MODULE_LIBRARIES larsim_PhotonPropagation
-                        larsim_LegacyLArG4
-                        larsim_ElectronDrift
-                        larsim_PhotonPropagation_PhotonVisibilityService_service
-                        larsim_IonizationScintillation
-                        larsim_Simulation
-                        lardataobj_Simulation
-                        larcorealg_Geometry
-                        larcore_Geometry_Geometry_service
-                        nug4_ParticleNavigation
+                       ROOT::GenVector 
+)
+set(MODULE_LIBRARIES 
+                        larsim::PhotonPropagation
+                        larsim::LegacyLArG4
+                        larsim::ElectronDrift
+                        larsim::PhotonPropagation_PhotonVisibilityService_service
+                        larsim::IonizationScintillation
+                        larsim::Simulation
+                        lardataobj::Simulation
+                        larcorealg::Geometry
+                        larcore::Geometry_Geometry_service
+                        nug4::ParticleNavigation
                         art_root_io::TFileService_service
                         art::Framework_Services_Registry
                         art_root_io::tfile_support
                         ROOT::Core
                         messagefacility::MF_MessageLogger
-                        nurandom_RandomUtils_NuRandomService_service
+                        nurandom::RandomUtils_NuRandomService_service
                         art::Persistency_Provenance
+                        ${CLHEP_LIBRARIES}
                         ROOT::GenVector
-                        ROOT::Gpad
-         )
+                        ROOT::Gpad 
+)
+
+cet_make_library(SOURCE PhotonLibrary.cxx  PhotonLibraryHybrid.cxx
+                 HEADERS_TARGET
+                 LIBRARIES ${LIB_LIBRARIES})
+
+cet_build_plugin(CreateHybridLibrary art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(PDFastSimPAR art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(PDFastSimPVS art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(PhotonLibraryAnalyzer art::module LIBRARIES ${MODULE_LIBRARIES})
+
+cet_build_plugin(PhotonLibraryPropagation art::module LIBRARIES ${MODULE_LIBRARIES})
 
+cet_build_plugin(PhotonVisibilityService art::service LIBRARIES ${SERVICE_LIBRARIES})
 
 install_headers()
 install_fhicl()
diff --git a/larsim/PhotonPropagation/LibraryMappingTools/CMakeLists.txt b/larsim/PhotonPropagation/LibraryMappingTools/CMakeLists.txt
index b56bf56..1cb9e23 100644
--- a/larsim/PhotonPropagation/LibraryMappingTools/CMakeLists.txt
+++ b/larsim/PhotonPropagation/LibraryMappingTools/CMakeLists.txt
@@ -1,21 +1,18 @@
 # using `art_make()` instead of `art_make_library()` because too lazy to list all sources:
-art_make(NO_PLUGINS
-  EXCLUDE
-    PhotonMappingIdentityTransformations_tool.cc
-    PhotonMappingXMirrorTransformations_tool.cc
-  LIB_LIBRARIES
+cet_make_library(SOURCE PhotonMappingIdentityTransformations.cxx  PhotonMappingXMirrorTransformations.cxx
+  LIBRARIES
     ROOT::Core
-    larcorealg_Geometry
+    larcorealg::Geometry
     art::Framework_Services_Registry
-    ${CANVAS}
-    ${ART_UTILITIES}
+    canvas::canvas
+    art::Utilities
   )
 
-simple_plugin(PhotonMappingIdentityTransformations "tool"
-              larsim_PhotonPropagation_LibraryMappingTools)
+cet_build_plugin(PhotonMappingIdentityTransformations art::tool LIBRARIES
+  larsim_PhotonPropagation_LibraryMappingTools)
 
-simple_plugin(PhotonMappingXMirrorTransformations "tool"
-              larsim_PhotonPropagation_LibraryMappingTools)
+cet_build_plugin(PhotonMappingXMirrorTransformations art::tool LIBRARIES
+  larsim_PhotonPropagation_LibraryMappingTools)
 
 install_headers()
 install_fhicl()
diff --git a/larsim/PhotonPropagation/ScintTimeTools/CMakeLists.txt b/larsim/PhotonPropagation/ScintTimeTools/CMakeLists.txt
index 71eb0a6..9ec2242 100644
--- a/larsim/PhotonPropagation/ScintTimeTools/CMakeLists.txt
+++ b/larsim/PhotonPropagation/ScintTimeTools/CMakeLists.txt
@@ -1,24 +1,21 @@
-art_make(NO_PLUGINS
-  EXCLUDE
-    ScintTimeLAr_tool.cc
-  LIB_LIBRARIES
+cet_make_library(SOURCE ScintTime.cxx
+  LIBRARIES
     ROOT::Core
-    larcorealg_Geometry
+    larcorealg::Geometry
     art::Framework_Services_Registry
-    ${CANVAS}
+    canvas::canvas
     cetlib::cetlib
     cetlib_except::cetlib_except
-    fhiclcpp
-    ${ART_UTILITIES}
+    fhiclcpp::fhiclcpp
+    CLHEP::CLHEP
+    art::Utilities
   )
 
 
-simple_plugin(ScintTimeLAr "tool"
-              larsim_PhotonPropagation_ScintTimeTools
-              LIBRARIES PRIVATE CLHEP::CLHEP
-              )
+cet_build_plugin(ScintTimeLAr art::tool LIBRARIES
+  larsim::PhotonPropagation_ScintTimeTools LIBRARIES PRIVATE CLHEP::CLHEP)
 
 
 install_headers()
 install_fhicl()
-install_source()
\ No newline at end of file
+install_source()
diff --git a/larsim/SimFilters/CMakeLists.txt b/larsim/SimFilters/CMakeLists.txt
index 7137a60..6fbbdc3 100644
--- a/larsim/SimFilters/CMakeLists.txt
+++ b/larsim/SimFilters/CMakeLists.txt
@@ -1,12 +1,77 @@
-art_make(MODULE_LIBRARIES
-         larcorealg_Geometry
-         larsim_MCCheater_ParticleInventoryService_service
-         nusimdata_SimulationBase
+cet_build_plugin(FilterCryostatNus art::module LIBRARIES
+         larcorealg::Geometry
+         larsim::MCCheater_ParticleInventoryService_service
+         nusimdata::SimulationBase
          art::Framework_Services_Registry
          messagefacility::MF_MessageLogger
          ROOT::Core
          ROOT::Physics)
 
+cet_build_plugin(FilterGenInTime art::module LIBRARIES
+         larcorealg::Geometry
+         larsim::MCCheater_ParticleInventoryService_service
+         nusimdata::SimulationBase
+         art::Framework_Services_Registry
+         messagefacility::MF_MessageLogger
+         ROOT::Core
+         ROOT::Physics)
+
+cet_build_plugin(FilterNoDirtNeutrinos art::module LIBRARIES
+         larcorealg::Geometry
+         larsim::MCCheater_ParticleInventoryService_service
+         nusimdata::SimulationBase
+         art::Framework_Services_Registry
+         messagefacility::MF_MessageLogger
+         ROOT::Core
+         ROOT::Physics)
+
+cet_build_plugin(FilterNoMCParticles art::module LIBRARIES
+         larcorealg::Geometry
+         larsim::MCCheater_ParticleInventoryService_service
+         nusimdata::SimulationBase
+         art::Framework_Services_Registry
+         messagefacility::MF_MessageLogger
+         ROOT::Core
+         ROOT::Physics)
+
+cet_build_plugin(FilterPrimaryPDG art::module LIBRARIES
+         larcorealg::Geometry
+         larsim::MCCheater_ParticleInventoryService_service
+         nusimdata::SimulationBase
+         art::Framework_Services_Registry
+         messagefacility::MF_MessageLogger
+         ROOT::Core
+         ROOT::Physics)
+
+cet_build_plugin(FilterSimPhotonLiteTime art::module LIBRARIES
+         larcorealg::Geometry
+         larsim::MCCheater_ParticleInventoryService_service
+         nusimdata::SimulationBase
+         art::Framework_Services_Registry
+         messagefacility::MF_MessageLogger
+         ROOT::Core
+         ROOT::Physics)
+
+cet_build_plugin(FilterSimPhotonTime art::module LIBRARIES
+         larcorealg::Geometry
+         larsim::MCCheater_ParticleInventoryService_service
+         nusimdata::SimulationBase
+         art::Framework_Services_Registry
+         messagefacility::MF_MessageLogger
+         ROOT::Core
+         ROOT::Physics)
+
+cet_build_plugin(FilterStoppingMuon art::module LIBRARIES
+         larcorealg::Geometry
+         larsim::MCCheater_ParticleInventoryService_service
+         nusimdata::SimulationBase
+         art::Framework_Services_Registry
+         messagefacility::MF_MessageLogger
+         ROOT::Core
+         ROOT::Physics)
+
+
+#
 # install_headers()
 install_fhicl()
 install_source()
diff --git a/larsim/Simulation/CMakeLists.txt b/larsim/Simulation/CMakeLists.txt
index 50c2809..4ed07db 100644
--- a/larsim/Simulation/CMakeLists.txt
+++ b/larsim/Simulation/CMakeLists.txt
@@ -1,20 +1,21 @@
-art_make(NO_PLUGINS
-         LIB_LIBRARIES
-           larsim_Simulation_LArVoxelCalculator_service
-           larsim_Simulation_LArG4Parameters_service
-           lardataobj_Simulation
-           lardata_Utilities
-           nusimdata_SimulationBase
+file(GLOB SOURCES *.cxx)
+cet_make_library(SOURCE ${SOURCES}
+         HEADERS_TARGET
+         LIBRARIES
+           lardataobj::Simulation
+           lardata::Utilities
+           nusimdata::SimulationBase
            art::Framework_Services_Registry
            art::Framework_Principal
-           ${ART_PERSISTENCY_PROVENANCE}
+           art::Persistency_Provenance
            ROOT::Core
            ROOT::Physics
            ROOT::GenVector
            )
 
-simple_plugin(LArVoxelCalculator "service")
-simple_plugin(LArG4Parameters "service")
+cet_build_plugin(LArVoxelCalculator art::service larsim::Simulation)
+
+cet_build_plugin(LArG4Parameters art::service larsim::Simulation)
 
 install_headers()
 install_fhicl()
diff --git a/larsim/Simulation/LArG4Parameters.cxx b/larsim/Simulation/LArG4Parameters.cxx
new file mode 100644
index 0000000..f6c555d
--- /dev/null
+++ b/larsim/Simulation/LArG4Parameters.cxx
@@ -0,0 +1,70 @@
+////////////////////////////////////////////////////////////////////////
+/// \file  LArG4Parameters_service.cc
+/// \brief Store parameters for running LArG4
+///
+/// \author bjpjones@mit.edu
+////////////////////////////////////////////////////////////////////////
+// This service exists to pass parameters to various different
+// classes in LArG4, which are not necessary directly called by
+// the LArG4_module class.
+//
+// Ben Jones, MIT, March 2010
+
+
+// Framework includes
+#include "art/Framework/Services/Registry/ServiceDefinitionMacros.h"
+
+#include "larsim/Simulation/LArG4Parameters.h"
+
+namespace sim {
+
+  //--------------------------------------------------------------------------
+  LArG4Parameters::LArG4Parameters(fhicl::ParameterSet const& pset)
+    : fOpVerbosity            {pset.get< int                      >("OpticalSimVerbosity"     )}
+    , fParticleKineticECut    {pset.get< double                   >("ParticleKineticEnergyCut")}
+    , fStoreTrajectories      {pset.get< bool                     >("StoreTrajectories"       )}
+    , fDrawNeutrals           {pset.get< bool                     >("VisualizeNeutrals"       )}
+    , fVisualizationEnergyCut {pset.get< double                   >("VisualizationEnergyCut"  )}
+    , fUseCustomPhysics       {pset.get< bool                     >("UseCustomPhysics"        )}
+    , fModifyProtonCut        {pset.get< bool                     >("ModifyProtonCut"         , false)}
+    , fNewProtonCut           {fModifyProtonCut? pset.get<double>("NewProtonCut") /* for HadronHP */ : 0.0}
+    , fLongitudinalDiffusion  {pset.get< double                   >("LongitudinalDiffusion"   )}
+    , fTransverseDiffusion    {pset.get< double                   >("TransverseDiffusion"     )}
+    , fElectronClusterSize    {pset.get< double                   >("ElectronClusterSize"     )}
+    , fMinNumberOfElCluster   {pset.get< int                      >("MinNumberOfElCluster"    )}
+    , fEnabledPhysics         {pset.get< std::vector<std::string> >("EnabledPhysics"          )}
+    , fK0Bias                 {pset.get< int                      >("CosmogenicK0Bias"        )}
+    , fXSBias                 {pset.get< int                      >("CosmogenicXSMNBiasFactor")}
+    , fXBias                  {pset.get< int                      >("CosmogenicXSMNBiasOn"    )}
+    // First of last 3 flags above turns on secondary particle bias for
+    // K0s,Lambdas,neutrons in MuNuclear.
+    // The 2nd is the enhancement factor for XS bias in MuNuclear. Keep it
+    // <=100.
+    // The 3rd turns on cross-section bias in MuNuclear.
+    , fKeepEMShowerDaughters  {pset.get< bool                     >("KeepEMShowerDaughters"   )}
+    , fDisableWireplanes       {pset.get< bool                     >("DisableWireplanes"       )}
+    , fSkipWireSignalInTPCs    {pset.get< std::vector<unsigned short int> >("SkipWireSignalInTPCs"      )}
+    , fRecombA                 {pset.get< double                   >("RecombA",util::kRecombA)}
+    , fRecombk                 {pset.get< double                   >("Recombk",util::kRecombk)}
+    , fModBoxA                 {pset.get< double                   >("ModBoxA",util::kModBoxA)}
+    , fModBoxB                 {pset.get< double                   >("ModBoxB",util::kModBoxB)}
+    , fLarqlChi0A              {pset.get< double                   >("LarqlChi0A"            )}
+    , fLarqlChi0B              {pset.get< double                   >("LarqlChi0B"            )}
+    , fLarqlChi0C              {pset.get< double                   >("LarqlChi0C"            )}
+    , fLarqlChi0D              {pset.get< double                   >("LarqlChi0D"            )}
+    , fLarqlAlpha              {pset.get< double                   >("LarqlAlpha"            )}
+    , fLarqlBeta               {pset.get< double                   >("LarqlBeta"             )}
+    , fUseModBoxRecomb         {pset.get< bool                     >("UseModBoxRecomb"         )}
+    , fUseModLarqlRecomb       {pset.get< bool                     >("UseModLarqlRecomb"       )}
+    , fIonAndScintCalculator   {pset.get< std::string              >("IonAndScintCalculator", "Separate")}
+    , fOpticalParamVolumes     {pset.get< std::vector<std::string> >("OpticalParamVolumes"     )}
+    , fOpticalParamModels      {pset.get< std::vector<std::string> >("OpticalParamModels"      )}
+    , fOpticalParamOrientations{pset.get< std::vector<int>         >("OpticalParamOrientations")}
+    , fOpticalParamParameters  {pset.get< std::vector<std::vector<std::vector<double> > > >("OpticalParamParameters")}
+    , fLitePhotons             {pset.get< bool                     >("UseLitePhotons"       )}
+    , fFillSimEnergyDeposits   {pset.get< bool                     >("FillSimEnergyDeposits",false)}
+    , fNoElectronPropagation   {pset.get< bool                     >("NoElectronPropagation",false)}
+    , fNoPhotonPropagation     {pset.get< bool                     >("NoPhotonPropagation",false)}
+  {}
+}
+
diff --git a/larsim/Simulation/LArG4Parameters_service.cc b/larsim/Simulation/LArG4Parameters_service.cc
index d1fb958..c6fb9f8 100644
--- a/larsim/Simulation/LArG4Parameters_service.cc
+++ b/larsim/Simulation/LArG4Parameters_service.cc
@@ -16,56 +16,4 @@
 
 #include "larsim/Simulation/LArG4Parameters.h"
 
-namespace sim {
-
-  //--------------------------------------------------------------------------
-  LArG4Parameters::LArG4Parameters(fhicl::ParameterSet const& pset)
-    : fOpVerbosity            {pset.get< int                      >("OpticalSimVerbosity"     )}
-    , fParticleKineticECut    {pset.get< double                   >("ParticleKineticEnergyCut")}
-    , fStoreTrajectories      {pset.get< bool                     >("StoreTrajectories"       )}
-    , fDrawNeutrals           {pset.get< bool                     >("VisualizeNeutrals"       )}
-    , fVisualizationEnergyCut {pset.get< double                   >("VisualizationEnergyCut"  )}
-    , fUseCustomPhysics       {pset.get< bool                     >("UseCustomPhysics"        )}
-    , fModifyProtonCut        {pset.get< bool                     >("ModifyProtonCut"         , false)}
-    , fNewProtonCut           {fModifyProtonCut? pset.get<double>("NewProtonCut") /* for HadronHP */ : 0.0}
-    , fLongitudinalDiffusion  {pset.get< double                   >("LongitudinalDiffusion"   )}
-    , fTransverseDiffusion    {pset.get< double                   >("TransverseDiffusion"     )}
-    , fElectronClusterSize    {pset.get< double                   >("ElectronClusterSize"     )}
-    , fMinNumberOfElCluster   {pset.get< int                      >("MinNumberOfElCluster"    )}
-    , fEnabledPhysics         {pset.get< std::vector<std::string> >("EnabledPhysics"          )}
-    , fK0Bias                 {pset.get< int                      >("CosmogenicK0Bias"        )}
-    , fXSBias                 {pset.get< int                      >("CosmogenicXSMNBiasFactor")}
-    , fXBias                  {pset.get< int                      >("CosmogenicXSMNBiasOn"    )}
-    // First of last 3 flags above turns on secondary particle bias for
-    // K0s,Lambdas,neutrons in MuNuclear.
-    // The 2nd is the enhancement factor for XS bias in MuNuclear. Keep it
-    // <=100.
-    // The 3rd turns on cross-section bias in MuNuclear.
-    , fKeepEMShowerDaughters  {pset.get< bool                     >("KeepEMShowerDaughters"   )}
-    , fDisableWireplanes       {pset.get< bool                     >("DisableWireplanes"       )}
-    , fSkipWireSignalInTPCs    {pset.get< std::vector<unsigned short int> >("SkipWireSignalInTPCs"      )}
-    , fRecombA                 {pset.get< double                   >("RecombA",util::kRecombA)}
-    , fRecombk                 {pset.get< double                   >("Recombk",util::kRecombk)}
-    , fModBoxA                 {pset.get< double                   >("ModBoxA",util::kModBoxA)}
-    , fModBoxB                 {pset.get< double                   >("ModBoxB",util::kModBoxB)}
-    , fLarqlChi0A              {pset.get< double                   >("LarqlChi0A"            )}
-    , fLarqlChi0B              {pset.get< double                   >("LarqlChi0B"            )}
-    , fLarqlChi0C              {pset.get< double                   >("LarqlChi0C"            )}
-    , fLarqlChi0D              {pset.get< double                   >("LarqlChi0D"            )}
-    , fLarqlAlpha              {pset.get< double                   >("LarqlAlpha"            )}
-    , fLarqlBeta               {pset.get< double                   >("LarqlBeta"             )}
-    , fUseModBoxRecomb         {pset.get< bool                     >("UseModBoxRecomb"         )}
-    , fUseModLarqlRecomb       {pset.get< bool                     >("UseModLarqlRecomb"       )}
-    , fIonAndScintCalculator   {pset.get< std::string              >("IonAndScintCalculator", "Separate")}
-    , fOpticalParamVolumes     {pset.get< std::vector<std::string> >("OpticalParamVolumes"     )}
-    , fOpticalParamModels      {pset.get< std::vector<std::string> >("OpticalParamModels"      )}
-    , fOpticalParamOrientations{pset.get< std::vector<int>         >("OpticalParamOrientations")}
-    , fOpticalParamParameters  {pset.get< std::vector<std::vector<std::vector<double> > > >("OpticalParamParameters")}
-    , fLitePhotons             {pset.get< bool                     >("UseLitePhotons"       )}
-    , fFillSimEnergyDeposits   {pset.get< bool                     >("FillSimEnergyDeposits",false)}
-    , fNoElectronPropagation   {pset.get< bool                     >("NoElectronPropagation",false)}
-    , fNoPhotonPropagation     {pset.get< bool                     >("NoPhotonPropagation",false)}
-  {}
-}
-
 DEFINE_ART_SERVICE(sim::LArG4Parameters)
diff --git a/larsim/Simulation/LArVoxelCalculator.cxx b/larsim/Simulation/LArVoxelCalculator.cxx
new file mode 100644
index 0000000..2022e8c
--- /dev/null
+++ b/larsim/Simulation/LArVoxelCalculator.cxx
@@ -0,0 +1,70 @@
+////////////////////////////////////////////////////////////////////////
+/// \file  LArVoxelCalculator_service.cc
+/// \brief Encapsulates calculation of LArVoxelID and LArVoxel parameters
+///
+/// \author  brebel@fnal.gov
+////////////////////////////////////////////////////////////////////////
+
+/// This service encapsulates the calculations associated with
+/// computing the LArVoxelID, and provides access to the any LArVoxel
+/// parameters from the input file(s).
+
+/// Definition: "Voxels" are three-dimensional "pixels"; basically
+/// they divide the energy deposition in the LAr into (x,y,z) cubes.
+/// Well, hyper-cubes actually, since we have to potentially include
+/// divisions in time as well.
+
+// Framework includes
+#include "art/Framework/Services/Registry/ServiceDefinitionMacros.h"
+
+#include "larsim/Simulation/LArVoxelCalculator.h"
+
+#include <cmath>
+
+namespace sim {
+
+  //----------------------------------------------------------------------------
+  LArVoxelCalculator::LArVoxelCalculator(fhicl::ParameterSet const& pset)
+    : m_voxelSize{pset.get<double>("VoxelSizeX"),
+                  pset.get<double>("VoxelSizeY"),
+                  pset.get<double>("VoxelSizeZ"),
+                  pset.get<double>("VoxelSizeT")}
+    , m_voxelOffset{pset.get<double>("VoxelOffsetX"),
+                    pset.get<double>("VoxelOffsetY"),
+                    pset.get<double>("VoxelOffsetZ"),
+                    pset.get<double>("VoxelOffsetT")}
+    , m_energyCut{pset.get<double>("VoxelEnergyCut")}
+  {}
+
+  //----------------------------------------------------------------------------
+  /// Returns a Monte-Carlo step size that's reasonable to use so that
+  /// each segment of a track will be contained within a single voxel.
+  double LArVoxelCalculator::SuggestedStepSize() const
+  {
+    return std::min( m_voxelSize[0], std::min( m_voxelSize[1], m_voxelSize[2] ) );
+  }
+
+  //----------------------------------------------------------------------------
+  /// Convert a co-ordinate axis (x, y, z, or t) into a bin number.
+  /// The first argument is the axis (x=0, y=1, z=2, t=3) and the
+  /// second is the value on that axis.
+  int LArVoxelCalculator::AxisToBin( const int axis,
+                                     const double coord ) const
+  {
+    // We have to be careful of how to handle the case when coord -
+    // offset < 0.  The standard floor() function rounds the number in
+    // the correct direction.
+    return static_cast<int>( floor( ( coord - m_voxelOffset[axis] ) / m_voxelSize[axis] ) );
+  }
+
+  //----------------------------------------------------------------------------
+  /// Get the value of an axis at the center of the given bin.  The
+  /// first argument is the axis (x=0, y=1, z=2, t=3) and the second
+  /// is the bin number on that axis.
+  double LArVoxelCalculator::BinToAxis( const int axis,
+                                        const int bin ) const
+  {
+    return ( static_cast<double>(bin) + 0.5 ) * m_voxelSize[axis] + m_voxelOffset[axis];
+  }
+
+} // namespace sim
diff --git a/larsim/Simulation/LArVoxelCalculator_service.cc b/larsim/Simulation/LArVoxelCalculator_service.cc
index f8fa00f..f9c0eec 100644
--- a/larsim/Simulation/LArVoxelCalculator_service.cc
+++ b/larsim/Simulation/LArVoxelCalculator_service.cc
@@ -19,54 +19,4 @@
 
 #include "larsim/Simulation/LArVoxelCalculator.h"
 
-#include <cmath>
-
-namespace sim {
-
-  //----------------------------------------------------------------------------
-  LArVoxelCalculator::LArVoxelCalculator(fhicl::ParameterSet const& pset)
-    : m_voxelSize{pset.get<double>("VoxelSizeX"),
-                  pset.get<double>("VoxelSizeY"),
-                  pset.get<double>("VoxelSizeZ"),
-                  pset.get<double>("VoxelSizeT")}
-    , m_voxelOffset{pset.get<double>("VoxelOffsetX"),
-                    pset.get<double>("VoxelOffsetY"),
-                    pset.get<double>("VoxelOffsetZ"),
-                    pset.get<double>("VoxelOffsetT")}
-    , m_energyCut{pset.get<double>("VoxelEnergyCut")}
-  {}
-
-  //----------------------------------------------------------------------------
-  /// Returns a Monte-Carlo step size that's reasonable to use so that
-  /// each segment of a track will be contained within a single voxel.
-  double LArVoxelCalculator::SuggestedStepSize() const
-  {
-    return std::min( m_voxelSize[0], std::min( m_voxelSize[1], m_voxelSize[2] ) );
-  }
-
-  //----------------------------------------------------------------------------
-  /// Convert a co-ordinate axis (x, y, z, or t) into a bin number.
-  /// The first argument is the axis (x=0, y=1, z=2, t=3) and the
-  /// second is the value on that axis.
-  int LArVoxelCalculator::AxisToBin( const int axis,
-                                     const double coord ) const
-  {
-    // We have to be careful of how to handle the case when coord -
-    // offset < 0.  The standard floor() function rounds the number in
-    // the correct direction.
-    return static_cast<int>( floor( ( coord - m_voxelOffset[axis] ) / m_voxelSize[axis] ) );
-  }
-
-  //----------------------------------------------------------------------------
-  /// Get the value of an axis at the center of the given bin.  The
-  /// first argument is the axis (x=0, y=1, z=2, t=3) and the second
-  /// is the bin number on that axis.
-  double LArVoxelCalculator::BinToAxis( const int axis,
-                                        const int bin ) const
-  {
-    return ( static_cast<double>(bin) + 0.5 ) * m_voxelSize[axis] + m_voxelOffset[axis];
-  }
-
-} // namespace sim
-
 DEFINE_ART_SERVICE(sim::LArVoxelCalculator)
diff --git a/larsim/TriggerAlgo/CMakeLists.txt b/larsim/TriggerAlgo/CMakeLists.txt
index 8ab7b41..2d60fbc 100644
--- a/larsim/TriggerAlgo/CMakeLists.txt
+++ b/larsim/TriggerAlgo/CMakeLists.txt
@@ -1,4 +1,4 @@
-simple_plugin(TriggerAlgoBase service
+cet_build_plugin(TriggerAlgoBase art::service
               LIBRARIES PRIVATE messagefacility::MF_MessageLogger)
 
 install_headers()
diff --git a/larsim/Utils/CMakeLists.txt b/larsim/Utils/CMakeLists.txt
index fbdb46d..3c3f778 100644
--- a/larsim/Utils/CMakeLists.txt
+++ b/larsim/Utils/CMakeLists.txt
@@ -1,7 +1,7 @@
 art_make(
              LIB_LIBRARIES 
-                           larsim_MCCheater_BackTrackerService_service
-                           lardataobj_RecoBase
+                           larsim::MCCheater_BackTrackerService_service
+                           lardataobj::RecoBase
                            art::Persistency_Common canvas::canvas
                            messagefacility::MF_MessageLogger
         )
diff --git a/test/EventGenerator/CMakeLists.txt b/test/EventGenerator/CMakeLists.txt
index f46076b..17a0058 100644
--- a/test/EventGenerator/CMakeLists.txt
+++ b/test/EventGenerator/CMakeLists.txt
@@ -2,8 +2,8 @@
 # Test GenerateEventTimestamp plug-in with SeedService's per-event policy,
 # or test SeedService's per-event policy with GenerateEventTimestamp plug-in.
 #
-simple_plugin( TestGeneratedEventTimestamp "module"
-  nurandom_RandomUtils_NuRandomService_service
+cet_build_plugin(TestGeneratedEventTimestamp art::module LIBRARIES
+  nurandom::RandomUtils_NuRandomService_service
   art::Framework_Core
   art::Framework_Principal
   art::Framework_Services_Registry
