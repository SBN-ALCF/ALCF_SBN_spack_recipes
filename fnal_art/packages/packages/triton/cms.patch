diff --git a/build/client/CMakeLists.txt b/build/client/CMakeLists.txt
index 855059b..a75a351 100644
--- a/build/client/CMakeLists.txt
+++ b/build/client/CMakeLists.txt
@@ -38,7 +38,7 @@ if(CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
   set(CMAKE_CXX_FLAGS "/W4 /D_WIN32_WINNT=0x0A00 /EHsc")
   set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS TRUE)
 else()
-  set(CMAKE_CXX_FLAGS "-Wall -Wextra -Wno-unused-parameter -Werror")
+  set(CMAKE_CXX_FLAGS "-Wall -Wextra -Wno-unused-parameter -Werror -Wno-error=deprecated-declarations")
   set(CMAKE_CXX_FLAGS_DEBUG "-g")
   set(CMAKE_CXX_FLAGS_RELEASE "-O3")
 endif()
@@ -92,4 +92,4 @@ endif() # TRITON_ENABLE_GRPC
 
 add_subdirectory(../../src/core src/core)
 add_subdirectory(../../src/clients/c++ src/clients/c++)
-add_subdirectory(../../src/clients/python src/clients/python)
+
diff --git a/src/core/CMakeLists.txt b/src/core/CMakeLists.txt
index 7178dc0..8cc3cb5 100644
--- a/src/core/CMakeLists.txt
+++ b/src/core/CMakeLists.txt
@@ -106,16 +106,6 @@ endif() # TRITON_ENABLE_GPU
 #
 # JSON utilities used by both clients and server
 #
-find_package(RapidJSON CONFIG REQUIRED)
-add_library(
-    triton-json-library EXCLUDE_FROM_ALL OBJECT
-    json.h
-)
-target_include_directories(
-  triton-json-library
-  PUBLIC ${RapidJSON_INCLUDE_DIRS}
-)
-set_target_properties(triton-json-library PROPERTIES LINKER_LANGUAGE CXX)
 
 #
 # Inference server core
*** server-2.3.0/src/clients/c++/library/CMakeLists.txt	2020-09-24 17:56:11.000000000 -0500
--- spack-src/src/clients/c++/library/CMakeLists.txt	2021-06-01 13:08:02.978699215 -0500
***************
*** 67,73 ****
        $<TARGET_OBJECTS:model-config-library>
        $<TARGET_OBJECTS:proto-library>
        $<TARGET_OBJECTS:grpc-client-library>
-       $<TARGET_OBJECTS:triton-json-library>
    )
    add_library(
        TRITON::grpcclient_static ALIAS grpcclient_static
--- 67,72 ----
***************
*** 97,115 ****
        $<TARGET_OBJECTS:model-config-library>
        $<TARGET_OBJECTS:proto-library>
        $<TARGET_OBJECTS:grpc-client-library>
-       $<TARGET_OBJECTS:triton-json-library>
    )
    add_library(
        TRITON::grpcclient ALIAS grpcclient
    )
  
    if (NOT WIN32)
-      set_target_properties(
-          grpcclient
-          PROPERTIES
-            LINK_DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/libgrpcclient.ldscript
-            LINK_FLAGS "-Wl,--version-script=libgrpcclient.ldscript"
-      )
     endif() # NOT WIN32
  
    if(${TRITON_ENABLE_GPU})
--- 96,107 ----
***************
*** 142,164 ****
    if (NOT WIN32)
       install(
           FILES
-          ${CMAKE_CURRENT_BINARY_DIR}/../../../../../c-ares/lib/libcares.a
-          ${CMAKE_CURRENT_BINARY_DIR}/../../../../../grpc/lib/libgpr.a
-          ${CMAKE_CURRENT_BINARY_DIR}/../../../../../grpc/lib/libgrpc.a
-          ${CMAKE_CURRENT_BINARY_DIR}/../../../../../grpc/lib/libgrpc++.a
-          ${CMAKE_CURRENT_BINARY_DIR}/../../../../../grpc/lib/libaddress_sorting.a
-          ${CMAKE_CURRENT_BINARY_DIR}/../../../../../protobuf/lib/libprotobuf.a
           DESTINATION lib
       )
    else()
       install(
           FILES
-          ${CMAKE_CURRENT_BINARY_DIR}/../../../../../c-ares/lib/cares.lib
-          ${CMAKE_CURRENT_BINARY_DIR}/../../../../../grpc/lib/gpr.lib
-          ${CMAKE_CURRENT_BINARY_DIR}/../../../../../grpc/lib/grpc.lib
-          ${CMAKE_CURRENT_BINARY_DIR}/../../../../../grpc/lib/grpc++.lib
-          ${CMAKE_CURRENT_BINARY_DIR}/../../../../../grpc/lib/address_sorting.lib
-          ${CMAKE_CURRENT_BINARY_DIR}/../../../../../protobuf/lib/libprotobuf.lib
           DESTINATION lib
       )
    endif() # NOT WIN32
--- 134,144 ----
***************
*** 182,197 ****
  
    install(
        FILES
-       ${CMAKE_CURRENT_BINARY_DIR}/../../../core/model_config.pb.h
-       ${CMAKE_CURRENT_BINARY_DIR}/../../../core/grpc_service.grpc.pb.h
-       ${CMAKE_CURRENT_BINARY_DIR}/../../../core/grpc_service.pb.h
        DESTINATION include
    )
  
    install(
        DIRECTORY
-       ${CMAKE_CURRENT_BINARY_DIR}/../../../../../protobuf/include/
-       ${CMAKE_CURRENT_BINARY_DIR}/../../../../../grpc/include/
        DESTINATION include
    )
  
--- 162,172 ----
***************
*** 242,248 ****
    add_library(
        httpclient_static STATIC
        $<TARGET_OBJECTS:http-client-library>
-       $<TARGET_OBJECTS:triton-json-library>
    )
    add_library(
        TRITON::httpclient_static ALIAS httpclient_static
--- 217,222 ----
***************
*** 267,285 ****
    add_library(
        httpclient SHARED
        $<TARGET_OBJECTS:http-client-library>
-       $<TARGET_OBJECTS:triton-json-library>
    )
    add_library(
        TRITON::httpclient ALIAS httpclient
    )
  
    if (NOT WIN32)
-      set_target_properties(
-        httpclient
-        PROPERTIES
-          LINK_DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/libhttpclient.ldscript
-          LINK_FLAGS "-Wl,--version-script=libhttpclient.ldscript"
-      )
    endif() # NOT WIN32
  
    if(${TRITON_ENABLE_GPU})
--- 241,252 ----
***************
*** 303,315 ****
    if (NOT WIN32)
       install(
           FILES
-          ${CMAKE_CURRENT_BINARY_DIR}/../../../../../curl/install/lib/libcurl.a
           DESTINATION lib
       )
    else()
       install(
           FILES
-          ${CMAKE_CURRENT_BINARY_DIR}/../../../../../curl/install/lib/libcurl.lib
           DESTINATION lib
       )
    endif() # NOT WIN32
--- 270,280 ----
***************
*** 340,351 ****
  # cmake configuration
  include (CMakePackageConfigHelpers)
  set(_LIB_CMAKE_DIR lib/cmake/TRITON)
  install(
    EXPORT triton-export
-   FILE TRITONTargets.cmake
-   NAMESPACE TRITON::
    DESTINATION ${_LIB_CMAKE_DIR}
  )
  write_basic_package_version_file(
    ${CMAKE_CURRENT_BINARY_DIR}/TRITONConfigVersion.cmake
    VERSION ${TRITON_VERSION}
--- 305,318 ----
  # cmake configuration
  include (CMakePackageConfigHelpers)
  set(_LIB_CMAKE_DIR lib/cmake/TRITON)
+ if(${TRITON_ENABLE_GRPC} OR ${TRITON_ENABLE_HTTP})
  install(
    EXPORT triton-export
    DESTINATION ${_LIB_CMAKE_DIR}
+   NAMESPACE TRITON::
+   FILE TRITONTargets.cmake
  )
+ endif()
  write_basic_package_version_file(
    ${CMAKE_CURRENT_BINARY_DIR}/TRITONConfigVersion.cmake
    VERSION ${TRITON_VERSION}
